
$(function () {
    $("#grid").jqGrid({
        url: "/TrainingCatalog/GetTrCatalogLists",
        datatype: 'json',
        mtype: 'Get',
        colNames: ['TrainingCatalogRid ', 'Catalog Name', 'Catalog Description', 'Category Name'],
        colModel: [
            { key: true, hidden: true, name: 'TrainingCatalogRid', index: 'TrainingCatalogRid', editable: true },
            { key: false, name: 'CatalogName', resizable: false, index: 'CatalogName', editable: true, editrules: { required: true }, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
            { key: false, name: 'CatalogDescription', resizable: false, index: 'CatalogDescription', editable: true, search: false },
            {
                key: false, name: 'CategoryName', resizable: false, index: 'TrainingCategoryRid', editable: true, edittype: 'select', editrules: { required: true }, editoptions: {
                    dataUrl: "/TrainingCatalog/Category",
                    buildSelect: function (data) {
                        var response = jQuery.parseJSON(data);
                        var s = '<select>';
                        jQuery.each(response, function (i, item) {
                            s += '<option value="' + response[i].TrainingCategoryRid + '">' + response[i].CategoryName + '</option>';
                        });
                        return s + "</select>";
                    }
                },
                searchoptions: { sopt: ['eq', 'ne', 'cn'] }
            }
        ],
        pager: jQuery('#pager'),
        rowNum: 10,
        rowList: [10, 20, 30, 40],
        height: '100%',
        viewrecords: true,
        caption: 'Training Catalog List',
        emptyrecords: 'No records to display',
        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records",
            repeatitems: false,
            Id: "0"
        },
        autowidth: true,
        multiselect: false
    }).navGrid('#pager', { edit: true, add: true, del: false, search: true, refresh: true },

        {
            // edit options
            zIndex: 100,
            url: '/TrainingCatalog/Edit',
            closeOnEscape: true,
            closeAfterEdit: true,
            recreateForm: true,
            top: Math.max(0, ($(window).height() / 3)),
            left: Math.max(0, ($(window).width() / 3)),
            width: 500,
            height: 150,
            resize: false,

            afterComplete: function (response) {
                debugger;
                if (response.responseText) {
                    alert(response.responseText);
                }
            }
        },
        {
            // add options
            zIndex: 100,
            url: "/TrainingCatalog/Create",
            closeOnEscape: true,
            closeAfterAdd: true,
            top: Math.max(0, ($(window).height() / 3)),
            left: Math.max(0, ($(window).width() / 3)),
            width: 500,
            height: 150,
            resize: false,
            afterComplete: function (response) {
                if (response.responseText) {
                    alert(response.responseText);
                }
            }
        },
        {
            // delete options


        });
});


$(function () {
    function checkL4(value, colname) {
        debugger;
        if (value.trim() == 'NA' || value.trim() == 'na') {
            return [false, "L4 is invalid."];
        }
        else {
            return [true, ""]
        }

    }

    function checkCourseCode(value, colname) {
        debugger;
        if ($("#Categorycombobox option:selected").text() == 'Exceller Academia') {
            if (value == '') {
                return [false, "Please provide Course Code and creation Date!!"];
            }
            else {
                return [true, ""]
            }
        }
        else {
            return [true, ""]
        }
    }


    debugger;

    $("#catlogMasterGrid").jqGrid({

        url: "/TrainingCatalog/GetTrCatalogMasterLists",

        datatype: 'json',

        mtype: 'Get',

        colNames: ['SlNo ', 'ContentType', 'L1', 'L2', 'L3', 'L4', 'Course Code', 'Media type', 'Content type', 'Text 3', 'Text 4', 'Creation Date', 'TrainingCatalogRid_L1', 'TrainingCatalogRid_L2', 'TrainingCatalogRid_L3', 'TrainingCatalogRid_L4', 'TrainingCategoryRid', 'SVF','Proficiency','Total Session','Total Duration Per Session'], 

        colModel: [

            { /*key: true,*/ hidden: true, name: 'TrainingCatalogRid_L4', index: 'TrainingCatalogRid_L4', editable: true },

            //{ key: false, name: 'CategoryName', index: 'CatalogName', editable: true },

            {

                key: false, name: 'ContentType', resizable: true, index: 'ContentType', editable: true, search: false, edittype: 'select', editoptions: {

                    value: {

                        'Global': 'Global', 'Regional': 'Regional'

                    }

                }

            },

            {

                key: false, name: 'CatalogName_L1', resizable: true, index: 'CatalogName_L1', editable: true, editrules: { required: true }, search: false

                //editoptions: {

                //    dataInit: function (element) {

                //        $(element).keypress(function (e) {

                //            if (e.which == 97 && e.which == 110) {

                //                debugger;

                //                return false;

                //            }

                //        });

                //    }

                //}

            },

            { key: false, name: 'CatalogName_L2', resizable: true, index: 'CatalogName_L2', editable: true, search: false },

            { key: false, name: 'CatalogName_L3', resizable: true, index: 'CatalogName_L3', editable: true, search: false },

            { key: false, name: 'CatalogName_L4', resizable: true, index: 'CatalogName_L4', editable: true, editrules: { custom: true, required: true, custom_func: checkL4 }, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },

            { key: false, hidden: true, name: 'Course_Code', resizable: true, index: 'Course_Code', editable: true, editrules: { custom: true, custom_func: checkCourseCode }, search: false },

            { key: false, hidden: true, name: 'Qualification_Level', resizable: true, index: 'Qualification_Level', editable: true, search: false },

            { key: false, hidden: true, name: 'Role_Curriculum', resizable: true, index: 'Role_Curriculum', editable: true, search: false },

            { key: false, hidden: true, name: 'Product_category', resizable: true, index: 'Product_category', editable: true, search: false },

            { key: false, hidden: true, name: 'Industry_category', resizable: true, index: 'Industry_category', editable: true, search: false },

            {

                key: false, hidden: true, name: 'Creation_date', resizable: true, index: 'Creation_date', editable: true, editrules: { custom: true, custom_func: checkCourseCode }, search: false,

                editoptions: {

                    size: 20,

                    dataInit: function (el) {

                        $(el).datepicker({

                            dateFormat: "dd-mm-yy",

                            numberOfMonths: 1,

                            maxDate: 0,

                        });

                    },

                }

            },

            { key: false, hidden: true, name: 'TrainingCatalogRid_L1', index: 'TrainingCatalogRid_L1', editable: true },

            { key: false, hidden: true, name: 'TrainingCatalogRid_L2', index: 'TrainingCatalogRid_L2', editable: true },

            { key: false, hidden: true, name: 'TrainingCatalogRid_L3', index: 'TrainingCatalogRid_L3', editable: true },

            { key: false, hidden: true, name: 'TrainingCatalogRid_L4', index: 'TrainingCatalogRid_L4', editable: true },

            { key: false, hidden: true, name: 'TrainingCategoryRid', index: 'TrainingCategoryRid', editable: true },

            { key: false, hidden: true, name: 'isSVF', resizable: true, index: 'isSVF', editable: true, search: false },
            { key: false, hidden: true, name: 'proficiency', resizable: true, index: 'proficiency', editable: true, search: false },
            { key: false, hidden: true, name: 'session', resizable: true, index: 'session', editable: true, search: false, formatter: function (cellvalue) { return cellvalue == 0 ? '' : cellvalue; } },
            { key: false, hidden: true, name: 'duration', resizable: true, index: 'duration', editable: true, search: false, formatter: function (cellvalue) { return cellvalue == 0 ? '' : cellvalue; } },

        ],

        pager: jQuery('#catlogMasterPager'),

        rowNum: 10,

        rowList: [10, 20, 30, 40],

        height: '100%',
            
        viewrecords: true,

        caption: 'Training Catalog List',

        emptyrecords: 'No records to display',

        loadComplete: function () {

            debugger;

            if ($("#Categorycombobox option:selected").text() == 'Exceller Academia') {

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["Course_Code"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["Qualification_Level"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["Role_Curriculum"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["Product_category"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["Industry_category"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["Creation_date"]);

            }

            else {

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["Course_Code"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["Qualification_Level"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["Role_Curriculum"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["Product_category"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["Industry_category"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["Creation_date"]);

            }

            if ($("#Categorycombobox option:selected").text() == 'Technology') {

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["isSVF"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["proficiency"]);

               jQuery("#catlogMasterGrid").jqGrid('showCol', ["session"]);

                jQuery("#catlogMasterGrid").jqGrid('showCol', ["duration"]);

            }

            else {

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["isSVF"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["proficiency"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["session"]);

                jQuery("#catlogMasterGrid").jqGrid('hideCol', ["duration"]);

            }


            autowidth: true;

            $('#catlogMasterGrid').jqGrid('setGridWidth', parseInt($(window).width()) - 40);

        },



        postData: {

            
            'C1': function () {
                var x = $('#Categorycombobox').val();
                debugger;
                return x == '' ? 0 : x;
            },
            'L1': function () {
                var x = $('#L1Options option:selected').text();
                //var z = $('#L1Options');
                //var val = $(z).find('option[value="' + x + '"]');
                var L1 = $('#L1Options').val();

                return L1 == undefined ? 0 : L1;
            },
            'L2': function () {
                var x = $('#txtL2').val().trim();
                var z = $('#L2Options');
                var val = $(z).find('option[value="' + x + '"]');
                var L2 = val.attr('id');
                return L2 == undefined ? 0 : L2;
            },
            'L3': function () {
                var x = $('#txtL3').val().trim();
                var z = $('#L3Options');
                var val = $(z).find('option[value="' + x + '"]');
                var L3 = val.attr('id');
                return L3 == undefined ? 0 : L3;
            },
            'L4': function () {
                var x = $('#txtL4').val().trim();
                var z = $('#L4Options');
                var val = $(z).find('option[value="' + x + '"]');
                var L4 = val.attr('id');
                return L4 == undefined ? 0 : L4;
            },
            'ContentType': function () {
                var ContentType = $('#txtLocation').val();
                return ContentType == undefined ? 0 : ContentType;
            },


            'Course_Code': function () {
               
                var Course_Code = $('#txtCode').val();
                return this["Course_Code"] == undefined ? 0 : Course_Code;
            },
            'Qualification_Level': function () {
                var Qualification_Level = $('#txtLevel').val();
                return this["Qualification_Level"] == undefined ? 0 : Qualification_Level;
            },
            'Role_Curriculum': function () {
                var Role_Curriculum = $('#txtRole').val();
                return this["Role_Curriculum"] == undefined ? 0 : Role_Curriculum;
            },
            'Product_category': function () {
                var Product_category = $('#txtProduct').val();
                return this["Product_category"] == undefined ? 0 : Product_category;
            },
            'Industry_category': function () {
                var Industry_category = $('#txtIndustry').val();
                return this["Industry_category"] == undefined ? 0 : Industry_category;
            },
            'Creation_date': function () {
                var Creation_date = $('#txtDate').val();
                return this["Creation_date"] == undefined ? 0 : Creation_date;
            },
            'isSVF': function () {
                var isSVF = $('#svf').val();               
                return this["isSVF"] == "SELECT" ? isSVF = "": isSVF
            },


        },

        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records",
            repeatitems: false,
            Id: "0"
        },
        autowidth: true,
        beforeRequest: function () {
            var postData = $("#catlogMasterGrid").getGridParam('postData');

        },


        multiselect: false
    }).navGrid('#catlogMasterPager', { edit: true, add: false, del: true, search: false, refresh: true },



        { // edit option


            zIndex: 100,
            url: '/TrainingCatalog/CatlogEdit',
            closeOnEscape: true,
            closeAfterEdit: true,
            recreateForm: true,
            top: Math.max(0, ($(window).height() / 3)),
            left: Math.max(0, ($(window).width() / 3)),
            width: 500,
            height: '100%',
            resize: false,
            beforeRequest: function () {
                var postData = $("#catlogMasterGrid").getGridParam('postData');
            },

            afterComplete: function (response) {
                debugger;
                if (response.responseText) {

                    $('#Recordsaved').dialog('open').text(response.responseText);
                    //alert(response.responseText);
                }
            },


            beforeShowForm: function (form) {

                if ($('#CatalogName_L1').val() == 'Behavioural' || $('#CatalogName_L1').val() == 'Role-Based' || $('#CatalogName_L1').val() == 'Leadership' || $('#CatalogName_L1').val() == 'MEP') {
                    $('#CatalogName_L1', form).attr('readonly', 'true');
                    result = [true, ''];
                }
                else {
                    $('#CatalogName_L1', form).attr('editable', 'true');
                    result = [false, ''];
                }
            }
        },
        {
            //add function
        },

        {
            // delete options'

            zIndex: 100,

            url: '/TrainingCatalog/Delete',
            closeOnEscape: true,
            closeAfterDelete: true,
            recreateForm: true,
            resize: false,
            width: 300,
            msg: "Are you sure you want to delete this Training program?",
            afterComplete: function (response) {
                if (response.responseText) {
                    debugger;
                    $('#Recorddeleted').dialog('open').text(response.responseText);

                    // alert(response.responseText);
                    var p = this.p, newPage = p.page;
                    if (p.lastpage > 1) {// on the multipage grid reload the grid
                        if (p.reccount === 0 && newPage === p.lastpage) {
                            // if after deliting there are no rows on the current page
                            // which is the last page of the grid
                            newPage--; // go to the previous page
                        }
                        // reload grid to make the row from the next page visable.
                        $(this).trigger("reloadGrid", [{ page: newPage }]);
                    }

                }
            }
        }

    ).navButtonAdd('#catlogMasterPager', {
        cloneToTop: false,
        caption: "Export to Excel",
        buttonicon: "ui-icon-disk",

        onClickButton: function (e) {

            debugger;
            var noofRecords = jQuery('#catlogMasterGrid').jqGrid('getGridParam', 'reccount');

            if (noofRecords == 0) {
                OpenDialog('No Data to Export')
                return false;
            }
            else {
                var C1 = $("#Categorycombobox").val();
                //var L1 = $("#txtL1").val();

                //var L2 = $("#txtL2").val();
                //var L3 = $("#txtL3").val();
                //var L4 = $("#txtL4").val();

                //var C1 = $('#Categorycombobox').val();                        
                var L1 = $('#L1Options').val();

                var x1 = $('#txtL2').val().trim();
                var z1 = $('#L2Options');
                var val1 = $(z1).find('option[value="' + x1 + '"]');
                var L2 = val1.attr('id');

                var x2 = $('#txtL3').val().trim();
                var z2 = $('#L3Options');
                var val2 = $(z2).find('option[value="' + x2 + '"]');
                var L3 = val2.attr('id');

                var x3 = $('#txtL4').val().trim();
                var z3 = $('#L4Options');
                var val3 = $(z3).find('option[value="' + x3 + '"]');
                var L4 = val3.attr('id');

                window.location.href = "/TrainingCatalog/ExportToExcel?Categorycombobox=" + C1 + "&L1=" + L1 + "&L2=" + L2 + "&L3=" + L3 + "&L4=" + L4;

                e.preventDefault();
            }

            //window.location.href = "/TodoList/ExportToExcel";
        },
        position: "last",
    });




    //palak--for requestor visibility--------------------------------------------------------------------------------------------
    $("#requestorgrid").jqGrid({
        url: "/TrainingCatalog/GetTrCatalogMasterLists",
        datatype: 'json',
        mtype: 'Get',
        colNames: ['SlNo ', 'L1', 'L2', 'L3', 'L4', 'TrainingCatalogRid_L1', 'TrainingCatalogRid_L2', 'TrainingCatalogRid_L3', 'TrainingCatalogRid_L4', 'TrainingCategoryRid'],
        colModel: [
            { key: true, hidden: true, name: 'TrainingCatalogRid_L4', index: 'TrainingCatalogRid_L4', editable: true },
            //{ key: false, name: 'CategoryName', index: 'CatalogName', editable: true },
            { key: false, name: 'CatalogName_L1', index: 'CatalogName_L1', editable: true, search: false },
            { key: false, name: 'CatalogName_L2', index: 'CatalogName_L2', editable: true, search: false },
            { key: false, name: 'CatalogName_L3', index: 'CatalogName_L3', editable: true, search: false },
            { key: false, name: 'CatalogName_L4', index: 'CatalogName_L4', editable: true, searchoptions: { sopt: ['eq', 'ne', 'cn'] } },
            { key: false, hidden: true, name: 'TrainingCatalogRid_L1', index: 'TrainingCatalogRid_L1', editable: true },
            { key: false, hidden: true, name: 'TrainingCatalogRid_L2', index: 'TrainingCatalogRid_L2', editable: true },
            { key: false, hidden: true, name: 'TrainingCatalogRid_L3', index: 'TrainingCatalogRid_L3', editable: true },
            { key: false, hidden: true, name: 'TrainingCatalogRid_L4', index: 'TrainingCatalogRid_L4', editable: true },
            {
                key: false, hidden: true, name: 'TrainingCategoryRid', index: 'TrainingCategoryRid', editable: true
            },

        ],
        pager: jQuery('#pagerrequestor'),
        rowNum: 10,
        rowList: [10, 20, 30, 40],
        height: '100%',
        viewrecords: true,
        caption: 'Training Catalog List',
        emptyrecords: 'No records to display',

        postData: {
            'C1': function () {
                var x = $('#Categorycombobox').val();
                return x == '' ? 0 : x;
            },
            'L1': function () {
                var x = $('#L1Options option:selected').text();
                //var z = $('#L1Options');
                //var val = $(z).find('option[value="' + x + '"]');
                var L1 = $('#L1Options').val();

                return L1 == undefined ? 0 : L1;
            },
            'L2': function () {
                var x = $('#txtL2').val().trim();
                var z = $('#L2Options');
                var val = $(z).find('option[value="' + x + '"]');
                var L2 = val.attr('id');
                return L2 == undefined ? 0 : L2;
            },
            'L3': function () {
                var x = $('#txtL3').val().trim();
                var z = $('#L3Options');
                var val = $(z).find('option[value="' + x + '"]');
                var L3 = val.attr('id');
                return L3 == undefined ? 0 : L3;
            },
            'L4': function () {
                var x = $('#txtL4').val().trim();
                var z = $('#L4Options');
                var val = $(z).find('option[value="' + x + '"]');
                var L4 = val.attr('id');
                return L4 == undefined ? 0 : L4;
            }
        },
        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records",
            repeatitems: false,
            Id: "0"
        },
        autowidth: true,
        beforeRequest: function () {
            var postData = $("#requestorgrid").getGridParam('postData');

        },
        multiselect: false
    }).navGrid('#pagerrequestor', { edit: false, add: false, del: false, search: true, refresh: true },
        {

        }
    );

    //---------------------------------------------------------------------------------------------------------------------------

    $('#Dialog-Box').dialog({
        autoOpen: false,
        height: 200,
        width: 600,
        modal: true,
        open: function (event, ui) {
            $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
        },
        buttons: {
            "OK": function () {
                $(this).dialog("close");
            }
        }
    });


    $('#EmptyErr-Box').dialog({
        autoOpen: false,
        height: 150,

        width: 400,
        modal: true,

        open: function (event, ui) {
            $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
        },

        buttons: {
            "OK": function () {
                var asd = $(this).text();
                $(this).dialog("close");
            }
        }
    });

    $('#Recordsaved').dialog({
        autoOpen: false,
        height: 150,
        width: 400,
        modal: true,
        open: function (event, ui) {
            $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
        },
        buttons: {
            "OK": function () {
                var asd = $(this).text();
                $(this).dialog("close");
            }
        }
    });
    $('#Recorddeleted').dialog({
        autoOpen: false,
        height: 150,
        width: 400,
        modal: true,
        open: function (event, ui) {
            $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
        },
        buttons: {
            "OK": function () {
                var asd = $(this).text();
                $(this).dialog("close");
            }
        }
    });

    $('#EmptyConfirmErr-Box').dialog({
        autoOpen: false,
        height: 150,
        width: 400,
        modal: true,

        open: function (event, ui) {
            $(".ui-dialog-titlebar-close", ui.dialog | ui).hide();
        },
        buttons: {
            "Yes": function () {
                $(this).dialog("close");
                var catcvalue = $('#Categorycombobox').val();

                var a = $('#L1Options option:selected').text();
                //var b = $('#L1Options');
                //var val = $(b).find('option[value="' + a + '"]');
                var L1 = $('#txtL1').val();

                L1 = L1 == undefined ? 0 : L1;

                var c = $('#txtL2').val().trim();
                var d = $('#L2Options');
                var val = $(d).find('option[value="' + c + '"]');
                var L2 = val.attr('id');
                L2 = L2 == undefined ? 0 : L2;

                var e = $('#txtL3').val().trim();
                var f = $('#L3Options');
                var val = $(f).find('option[value="' + e + '"]');
                var L3 = val.attr('id');
                L3 = L3 == undefined ? 0 : L3;

                var g = $('#txtL4').val().trim();
                var h = $('#L4Options');
                var val = $(h).find('option[value="' + g + '"]');
                var L4 = val.attr('id');
                L4 = L4 == undefined ? 0 : L4;
                //if (a == 'Select' || c == 'Select' || e == 'Select' || g == 'Select')
                //    alert("Saving of [Select] not allowed");
                var ContentType = $('#txtLocation').val();
                ContentType == undefined ? 0 : ContentType;

                debugger;


                var code = $('#txtCode').val();

                code = code == undefined ? 0 : code;
                var level = $('#txtLevel').val();

                level = level == undefined ? 0 : level;
                var role = $('#txtRole').val();

                role = role == undefined ? 0 : role;
                var product = $('#txtProduct').val();

                product = product == undefined ? 0 : product;
                var category = $('#txtIndustry').val();

                category = category == undefined ? 0 : category;
                var date = $('#txtDate').val();

                date = date == undefined ? 0 : date;


              
                var isSVF = $('#svf').val();
                isSVF == undefined || "SELECT" ? 0 : isSVF;

                if (isSVF == "Yes") {
                    var proficiency = $('.svfProficiency').val();
                    proficiency = proficiency == undefined || 0 ? 0 : proficiency;

                    var session = $('#svfSession').val();
                    session = (session == undefined || session == 0 )? 0 : session;

                    var duration = $('#svfDuration').val();
                    duration = (duration == undefined ||duration == 0) ? 0 : duration;
                }
                else {
                    session = 0;
                    duration = 0;
                }
                



                if (catcvalue == '9') {
                    var ProcessName = 'SaveCatalogData2';
                }
                else
                    var ProcessName = 'SavaCatalogData'
                //if ($("#Categorycombobox option:selected").text() == 'Behavioural') {
                //    L4 = L3;
                //    g = e;
                //    $('#txtL4').val(' ');
                //}

                if (catcvalue == '9') {
                    $.ajax({

                        url: '/TrainingCatalog/SaveCatalogData2',
                        type: 'GET',
                        data: {
                            'catcvalue': catcvalue, 'L1V': L1, 'L1T': L1, 'L2V': L2, 'L2T': c, 'L3V': L3, 'L3T': e, 'L4V': L4, 'L4T': g, 'ContentType': ContentType, 'ProcessName': ProcessName, 'Course_Code': code, 'Qualification_Level': level, 'Role_Curriculum': role, 'Product_category': product, 'Industry_category': category, 'Creation_date': date
                        },

                        success: function (data) {
                            debugger;
                            $("#catlogMasterGrid").trigger('reloadGrid');
                            $('#Categorycombobox').change();

                            OpenDialog(data);
                        }

                    });

                }
                else {


                    $.ajax({
                        url: '/TrainingCatalog/SaveCatalogData',
                        type: 'GET',
                        data: {
                            'catcvalue': catcvalue, 'L1V': L1, 'L1T': L1, 'L2V': L2, 'L2T': c, 'L3V': L3, 'L3T': e, 'L4V': L4, 'L4T': g, 'ContentType': ContentType, 'ProcessName': ProcessName, 'isSVF': isSVF, 'proficiency': proficiency, 'session': session, 'duration': duration
                        },
                        success: function (data) {
                            debugger;
                            $("#catlogMasterGrid").trigger('reloadGrid');
                            $('#Categorycombobox').change();


                            //clearing the fields
                            $('#svf').prop('selectedIndex', 0);
                            $('#dropdownInput').val('');
                            $('#dropdownList input[type="checkbox"]').prop('checked', false);
                            $('#svfSession').val('');
                            $('#svfDuration').val('');


                            OpenDialog(data);
                        }

                    });
                }               
            },
            "No": function () {
                var asd = $(this).text();
                $(this).dialog("close");
            }

        }
    });






    function OpenDialog(str) {
        $('#Dialog-Box').dialog('open').text(str);
        $('#Dialog-Box').dialog({
            autoOpen: false,
            height: 150,
            width: 400,
            modal: true
        })     
    };


    $("#btnSubmit").click(function (e) {
        e.preventDefault();

        debugger;

        var catcvalue = $('#Categorycombobox').val();

        if (catcvalue == "") {
            //alert('Please Select Category');
            OpenDialog('Please Select Category')
            return false;
        }
        var a = $('#L1Options option:selected').text();
        //var b = $('#L1Options');
        //var val = $(b).find('option[value="' + a + '"]');
        var L1 = $('#txtL1').val();

        L1 = L1 == undefined ? 0 : L1;

        var c = $('#txtL2').val().trim();
        var d = $('#L2Options');
        var val = $(d).find('option[value="' + c + '"]');
        var L2 = val.attr('id');
        L2 = L2 == undefined ? 0 : L2;

        var e = $('#txtL3').val().trim();
        var f = $('#L3Options');
        var val = $(f).find('option[value="' + e + '"]');
        var L3 = val.attr('id');
        L3 = L3 == undefined ? 0 : L3;

        var g = $('#txtL4').val().trim();
        var h = $('#L4Options');
        var val = $(h).find('option[value="' + g + '"]');
        var L4 = val.attr('id');
        L4 = L4 == undefined ? 0 : L4;
        //if (a == 'Select' || c == 'Select' || e == 'Select' || g == 'Select')
        //    alert("Saving of [Select] not allowed");
        var ContentType = $('#txtLocation').val();
        ContentType == undefined ? 0 : ContentType;




        if ($("#Categorycombobox option:selected").text() == 'Exceller Academia') {
            var catcvalue1 = $('#txtCode').val();
            var catcvalue2 = $("#txtDate").val();
            debugger;
            if (catcvalue1 == "" || catcvalue2 == "") {
                //alert('Please Select Category');
                OpenDialog('Please provide Course Code and Creation Date!!')
                return false;
            }
            var code = $('#txtCode').val();
            code = code == undefined ? 0 : code;

            var level = $('#txtLevel').val();
            level = level == undefined ? 0 : level;

            var role = $('#txtRole').val();
            role = role == undefined ? 0 : role;

            var product = $('#txtProduct').val();
            product = product == undefined ? 0 : product;

            var category = $('#txtIndustry').val();
            category = category == undefined ? 0 : category;

            var date = $('#txtDate').val();
            date = date == undefined ? 0 : date;

        }

        if ($("#Categorycombobox option:selected").text() == 'Technology') {
            var isSVF = $('#svf').val();
            isSVF == undefined || "SELECT" ?0 : isSVF;

            if (isSVF == "Yes") {
                var proficiency = $('.svfProficiency').val();
                proficiency = proficiency == undefined || 0 ? 0 : proficiency;

                var session = $('#svfSession').val();
                session = (session == undefined || session == 0) ? 0 : session;

                var duration = $('#svfDuration').val();
                duration = (duration == undefined || duration == 0) ? 0 : duration;
            }
            else {
                session = 0;
                duration = 0;
            }
           
        }

        if ($("#Categorycombobox option:selected").text() == 'Technology') {
            if ($('#svf').val() == undefined || $('#svf').val() == "" || $('#svf').val() == "SELECT" || $('#svf').val() == "0") {
                $('#EmptyErr-Box').dialog('open').text('Please Select svf')
                return;
            }
        }

        if (isSVF == "Yes") {
            if ($('.svfProficiency').val() == undefined || $('.svfProficiency').val() == "" || $('.svfProficiency').val() == "0") {
                $('#EmptyErr-Box').dialog('open').text('Please Select proficiency')
                return;
            }
            if ($('#svfSession').val() == undefined || $('#svfSession').val() == "" || $('#svfSession').val() == "0") {
                $('#EmptyErr-Box').dialog('open').text('Please Select Total Session')
                return;
            } if ($('#svfDuration').val() == undefined || $('#svfDuration').val() == "" || $('#svfDuration').val() == "0") {
                $('#EmptyErr-Box').dialog('open').text('Please Select Total Duration.')
                return;
            }
        }

        if (L1 == "0" || $('#txtL4').val().trim() == "" || $('#txtL1').val().trim() == "") {
            debugger;

            $('#EmptyErr-Box').dialog('open').text('Cannot save Empty Values');
            return false;
        }
        else if ($('#txtL4').val().trim().toUpperCase() == "NA") {

            $('#EmptyErr-Box').dialog('open').text('L4 is invalid.');

            return false;

        }


        else {
            $('#EmptyConfirmErr-Box').dialog('open');
        }



    });

    $("#btnSearch").click(function (e) {
        debugger;
        e.preventDefault();

        //  $("#search").val() = 'True';
        var catcvalue = $('#Categorycombobox').val();
        if (catcvalue == "") {
            OpenDialog('Please Select Category')
            return false;
        }
        var L1 = $('#txtL1').val().trim();
        var L2 = $('#txtL2').val().trim();
        var L3 = $('#txtL3').val().trim();
        var L4 = $('#txtL4').val().trim();

        var ContentType = $('#txtLocation').val();
        ContentType == undefined ? 0 : ContentType;

        var Course_Code = $('#txtCode').val().trim();
        var Qualification_Level = $('#txtLevel').val().trim();
        var Role_Curriculum = $('#txtRole').val().trim();
        var Product_Category = $('#txtProduct').val().trim();
        var Industry_Category = $('#txtIndustry').val().trim();
        var Creation_Date = $('#txtDate').val().trim();

        var isSVF = $('#svf').val().trim();
        isSVF == "SELECT" ? isSVF = "" : isSVF


        $.ajax({
            url: '/TrainingCatalog/SearchCatalogData',
            type: 'GET',
            data: {
                'catcvalue': catcvalue, 'L1': L1, 'L2': L2, 'L3': L3, 'L4': L4, 'ContentType': ContentType, 'Course_Code': Course_Code, 'Qualification_Level': Qualification_Level,
                'Role_Curriculum': Role_Curriculum, 'Product_Category': Product_Category, 'Industry_Category': Industry_Category, 'Creation_Date': Creation_Date, 'isSVF': isSVF
            },

            success: function (data) {
                $("#catlogMasterGrid").trigger('reloadGrid', [{ page: 1 }]);

            }

        });

    });
});




